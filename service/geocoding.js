// Generated by CoffeeScript 1.8.0
(function() {
  var Devices, Geocoding, async, request;

  Devices = require('../models/devices');

  async = require('async');

  request = require('request');

  Geocoding = (function() {
    function Geocoding(devInfo) {
      this.devInfo = devInfo;
      this.url = 'http://api.map.baidu.com/geocoder/v2/?location=' + this.devInfo.long + ',' + this.devInfo.lat + '&output=json&pois=1&ak=' + process.env.baidu;
    }

    Geocoding.prototype.getGeo = function(cb) {
      var self;
      self = this;
      return request.get(self.url, function(err, res, body) {
        var data;
        if (err) {
          return console.log(err);
        }
        try {
          data = JSON.parse(body);
        } catch (_error) {
          return console.log("JONS parse error:", body);
        }
        if (data.status !== 0) {
          return console.log("转换错误:", data);
        }
        return cb(null, data);
      });
    };

    Geocoding.prototype.saveGeo = function(cb) {
      var self;
      self = this;
      return async.waterfall([
        function(callbacl) {
          return self.getGeo(function(err, data) {
            if (err) {
              return console.log(err);
            }
            return callbacl(null, data);
          });
        }, function(data, callback) {
          this.devInfo.geo_json = data;
          return this.devInfo.formatted_address = data.result.formatted_address;
        }
      ]);
    };

    return Geocoding;

  })();

}).call(this);

//# sourceMappingURL=geocoding.js.map
